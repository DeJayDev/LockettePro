# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#publishing-using-gradle

name: Gradle Package

on:
  push:
    branches:         # array of glob patterns matching against refs/heads. Optional; defaults to all
      - master          # triggers on pushes that contain changes in master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Build with Gradle
        run: gradle jar

      - name: Generate SHA
        id: make_sha
        uses: benjlevesque/short-sha@v1.0

      - name: Create a Release
        id: make_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHA: ${{ steps.make_sha.outputs.sha }}
        with:
          # The name of the tag. This should come from the webhook payload, `github.GITHUB_REF` when a user pushes a new tag
          tag_name: ${{ env.SHA }}
          # The name of the release. For example, `Release v1.0.1`
          release_name: Release ${{ env.SHA }}
          # `true` to create a draft (unpublished) release, `false` to create a published one. Default: `false`
          draft: true # optional

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SHA: ${{ env.sha }}
        with:
          upload_url: ${{ steps.make_release.outputs.upload_url }}
          asset_path: ./build/libs/LockettePro-3.0.jar
          asset_name: LockettePro-${{ env.SHA }}.jar
          asset_content_type: application/jar
